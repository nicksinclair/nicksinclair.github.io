{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/nav.js","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/templates/projectTemplate.js"],"names":["navLinks","label","to","pathname","globalHistory","className","style","paddingTop","listStyle","display","flexDirection","map","link","key","includes","Link","Header","siteTitle","margin","defaultProps","children","data","useStaticQuery","site","siteMetadata","title","toUpperCase","maxWidth","paddingLeft","paddingBottom","ProjectTemplate","markdownRemark","frontmatter","html","summary","date","dangerouslySetInnerHTML","__html"],"mappings":"uMAIMA,EAAW,CACf,CAAEC,MAAO,WAAYC,GAAI,aAEzB,CAAED,MAAO,SAAUC,GAAI,YAkCzB,MA/BA,WACE,IAAMC,EAAWC,kCACjB,OACE,uBACEC,UAAU,gBACVC,MAAO,CACLC,WAAY,SAGd,sBACED,MAAO,CACLE,UAAW,OACXC,QAAS,OACTC,cAAe,WAGhBV,EAASW,KAAI,SAACC,GAAD,OACZ,sBACEC,IAAKD,EAAKX,MACVI,UAAS,cACPF,EAASW,SAASF,EAAKV,IAAM,oBAAsB,IAD5C,KAIT,gBAAC,EAAAa,KAAD,CAAMb,GAAIU,EAAKV,IAAKU,EAAKX,cC3B/Be,EAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,8BACE,uBAAKZ,UAAU,oBACb,sBAAIA,UAAU,aAAaC,MAAO,CAAEY,OAAQ,IAC1C,gBAAC,EAAAH,KAAD,CAAMb,GAAG,KAAKe,IAEhB,gBAAC,EAAD,SASND,EAAOG,aAAe,CACpBF,UAAU,IAGZ,QC4BA,EAvCe,SAAC,GAAkB,IAAD,EAAfG,EAAe,EAAfA,SACVC,GAAOC,oBAAe,cAU5B,OACE,uBAAKjB,UAAU,kBACb,gBAAC,EAAD,CACEY,WAAW,UAAAI,EAAKE,KAAKC,oBAAV,eAAwBC,MAAMC,gBAA9B,UAGb,wBACErB,UAAU,UACVC,MAAO,CACLqB,SAAS,OACTC,YAAY,UACZC,cAAc,YAGfT,GAGH,8BACE,2F,iHCtCO,SAASU,EAAT,GAAoC,IACzCC,EADwC,EAARV,KAChCU,eACAC,EAAsBD,EAAtBC,YAAaC,EAASF,EAATE,KAErB,OACE,gBAAC,IAAD,KACE,2BAAS5B,UAAU,qBACjB,0BAAK2B,EAAYP,MAAMC,eAEvB,gBAAC,EAAAX,KAAD,CAAMb,GAAG,aAAT,sBAEA,0BAAK8B,EAAYE,SAEjB,0BACE,qCAAaF,EAAYG,OAG3B,uBACE9B,UAAU,kBACV+B,wBAAyB,CAAEC,OAAQJ","file":"component---src-templates-project-template-js-13594ce011e604fac29f.js","sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { globalHistory } from '@reach/router';\n\nconst navLinks = [\n  { label: 'PROJECTS', to: '/projects' },\n  // { label: 'ABOUT', to: '/about' },\n  { label: 'RESUME', to: '/resume' },\n];\n\nfunction Nav() {\n  const pathname = globalHistory.location.pathname;\n  return (\n    <nav\n      className=\"nav-container\"\n      style={{\n        paddingTop: '10px',\n      }}\n    >\n      <ul\n        style={{\n          listStyle: 'none',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n      >\n        {navLinks.map((link) => (\n          <li\n            key={link.label}\n            className={`menu-item ${\n              pathname.includes(link.to) ? 'current-menu-item' : ''\n            } `}\n          >\n            <Link to={link.to}>{link.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport Nav from './nav';\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"sticky-container\">\n      <h1 className=\"site-title\" style={{ margin: 0 }}>\n        <Link to=\"/\">{siteTitle}</Link>\n      </h1>\n      <Nav />\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport '../stylesheets/scss/layout.scss';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"site-container\">\n      <Header\n        siteTitle={data.site.siteMetadata?.title.toUpperCase() || `Title`}\n      />\n\n      <main\n        className=\"content\"\n        style={{\n          maxWidth: `70ch`,\n          paddingLeft: `3.75rem`,\n          paddingBottom: `1.45rem`,\n        }}\n      >\n        {children}\n      </main>\n\n      <footer>\n        <h4>Created using React, Gatsby, GraphQL, Sass, and Markdown.</h4>\n      </footer>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\n\nexport default function ProjectTemplate({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout>\n      <article className=\"project-container\">\n        <h1>{frontmatter.title.toUpperCase()}</h1>\n\n        <Link to=\"/projects\">&larr; Back to Projects</Link>\n\n        <h3>{frontmatter.summary}</h3>\n\n        <h4>\n          <em>Updated {frontmatter.date}</em>\n        </h4>\n\n        <div\n          className=\"project-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </article>\n    </Layout>\n  );\n}\n\nexport const projectQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        date\n        title\n        summary\n        author\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}