{"version":3,"sources":["components/Navbar.tsx","components/Header.tsx","components/Home.tsx","client.js","components/Thumbnail.tsx","components/Projects.jsx","components/Project.jsx","components/About.jsx","utils/utils.js","components/Resume/Position.jsx","components/Resume/SkillCategory.jsx","components/Resume/Education.jsx","components/Resume/ResumeSection.tsx","components/Resume/Resume.tsx","components/Footer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Desktop","children","useMediaQuery","minWidth","Navbar","className","to","exact","Header","props","title","arrow","arrowSVG","xmlns","viewBox","d","fill","defaultProps","Home","sanityClient","projectId","dataset","useCdn","Thumbnail","link","image","category","src","alt","Projects","useState","projectsData","setProjects","useEffect","fetch","then","data","catch","console","error","map","project","slug","current","mainImage","asset","url","builder","imageUrlBuilder","Project","source","projectData","setProjectData","useParams","name","blocks","body","About","authorData","setAuthorData","bio","formatDate","date","preformattedDate","Date","month","toLocaleString","toUpperCase","year","getFullYear","Position","company","companyUrl","startDate","endDate","location","description","href","target","rel","SkillCategory","skillList","skill","Education","school","major","minor","gpa","notes","ResumeSection","schema","sectionData","setSectionData","component","currentPosition","uuid","toLowerCase","Resume","Footer","App","basename","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e3d7c22.chunk.js","sourcesContent":["// Absolute imports\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { useMediaQuery } from 'react-responsive';\n\nconst Desktop = ({ children }) => {\n  const isDesktop = useMediaQuery({ minWidth: 992 });\n  return isDesktop ? children : null;\n};\n\nconst Navbar: React.FC = () => {\n  return (\n    <div className=\"navbar-container\">\n      <Desktop>\n        <nav className=\"navbar\">\n          <ul>\n            <li>\n              <NavLink to=\"/projects\" exact>\n                Projects\n              </NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/about\">About</NavLink>\n            </li>\n            <li>\n              <NavLink to=\"/resume\">Resume</NavLink>\n            </li>\n          </ul>\n        </nav>\n      </Desktop>\n\n      <NavLink exact to=\"/\">\n        <h2>NICK SINCLAIR</h2>\n      </NavLink>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React from 'react';\n\ninterface Props {\n  className: string;\n  title: string;\n  arrow?: boolean;\n}\n\nconst defaultProps: Props = {\n  className: 'header',\n  title: 'Title',\n};\n\nconst Header: React.FC<Props> = props => {\n  const { title, arrow, className } = props;\n\n  let arrowSVG = null;\n\n  if (arrow) {\n    arrowSVG = (\n      <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n        <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n        <path d=\"M12 4l-1.41 1.41L16.17 11H4v2h12.17l-5.58 5.59L12 20l8-8z\" />\n      </svg>\n    );\n  }\n\n  return (\n    <div className={className}>\n      <h1>{title}</h1>\n      {arrowSVG}\n    </div>\n  );\n};\n\nHeader.defaultProps = defaultProps;\n\nexport default Header;\n","// Absolute imports\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\n// Relative imports\nimport Header from './Header';\n\nconst Home: React.FC = () => {\n  return (\n    <main className=\"content\">\n      <h2>Hello!</h2>\n      <p>I am Nick Sinclair</p>\n      <p>Welcome to my personal portoflio site</p>\n\n      <NavLink exact to=\"/projects\">\n        <Header className=\"header-link\" title=\"Projects\" arrow />\n      </NavLink>\n    </main>\n  );\n};\n\nexport default Home;\n","import sanityClient from '@sanity/client';\n\n// const client = sanityClient({\n//   projectId: 'q87olzgk',\n//   dataset: 'production',\n//   useCdn: true,\n// });\n\n// export default client;\n\nexport default sanityClient({\n  projectId: 'q87olzgk',\n  dataset: 'production',\n  useCdn: true,\n});\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  link: string;\n  image: string;\n  title: string;\n  category: string;\n}\n\nconst Thumbnail: React.FC<Props> = props => {\n  const { link, image, title, category } = props;\n\n  return (\n    <article className=\"project-card\">\n      <Link to={link} key={title}>\n        <div className=\"card-image\">\n          <img src={image} alt={title} />\n        </div>\n        <header className=\"card-header\">\n          <p>{category}</p>\n          <h1>{title}</h1>\n        </header>\n      </Link>\n    </article>\n  );\n};\n\nexport default Thumbnail;\n","// Absolute imports\nimport React, { useEffect, useState } from 'react';\n// import { v4 as uuidv4 } from 'uuid';\n\n// Relative imports\nimport sanityClient from '../client';\nimport Thumbnail from './Thumbnail';\n\nconst Projects = () => {\n  const [projectsData, setProjects] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"post\"]{\n          title,\n          slug,\n          \"category\": categories[0]->title,\n          mainImage{\n            asset->{\n              _id,\n              url\n            }\n          }\n        }`,\n      )\n      .then(data => {\n        setProjects(data);\n      })\n      .catch(console.error);\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <h2>PROJECTS</h2>\n\n      <section className=\"project-card-grid\">\n        {projectsData &&\n          projectsData.map(project => (\n            <Thumbnail\n              link={`/projects/${project.slug.current}`}\n              image={project.mainImage.asset.url}\n              title={project.title}\n              category={project.category} // eslint-disable-line no-underscore-dangle\n              key={project.title}\n            />\n          ))}\n      </section>\n    </main>\n  );\n};\n\nexport default Projects;\n","// Absolute imports\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport BlockContent from '@sanity/block-content-to-react';\nimport imageUrlBuilder from '@sanity/image-url';\n\n// Relative Imports\nimport sanityClient from '../client';\nimport Header from './Header';\n\nconst builder = imageUrlBuilder(sanityClient);\n\nconst urlFor = source => {\n  return builder.image(source);\n};\n\nconst Project = () => {\n  const [projectData, setProjectData] = useState(null);\n  const { slug } = useParams();\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[slug.current == $slug]{\n          title,\n          slug,\n          mainImage{\n            asset->{\n              _id,\n              url\n            }\n          },\n          body[]{\n            ..., \n            asset->{\n              ...,\n              \"_key\": _id\n            }\n          },\n          \"name\": author->name,\n        }`,\n        { slug },\n      )\n      .then(data => {\n        setProjectData(data[0]);\n      })\n      .catch(console.error);\n  }, [slug]);\n\n  if (!projectData) return <div>Loading...</div>;\n\n  return (\n    <main className=\"content\">\n      <div>\n        <Header title={projectData.title} />\n        <div>\n          <h4>{projectData.name}</h4>\n        </div>\n      </div>\n      <img src={urlFor(projectData.mainImage).url()} alt={projectData.title} />\n      <div>\n        <BlockContent\n          blocks={projectData.body}\n          projectId={sanityClient.projectId}\n          dataset={sanityClient.dataset}\n        />\n      </div>\n    </main>\n  );\n};\n\nexport default Project;\n","// Absolute imports\nimport React, { useState, useEffect } from 'react';\nimport BlockContent from '@sanity/block-content-to-react';\nimport imageUrlBuilder from '@sanity/image-url';\n\n// Relative imports\nimport sanityClient from '../client';\n\nconst builder = imageUrlBuilder(sanityClient);\n\nconst urlFor = source => {\n  return builder.image(source);\n};\n\nconst About = () => {\n  const [authorData, setAuthorData] = useState(null);\n\n  useEffect(() => {\n    sanityClient\n      .fetch(\n        `*[_type == \"author\"]{\n          name,\n          image{\n            asset->{\n              _id,\n              url\n            }\n          },\n          bio\n        }`,\n      )\n      .then(data => {\n        setAuthorData(data[0]);\n      })\n      .catch(console.error);\n  });\n\n  if (!authorData) return <div>Loading...</div>;\n\n  return (\n    <main className=\"content\">\n      <img src={urlFor(authorData.image).url()} alt={authorData.name} />\n      <article>\n        <BlockContent\n          blocks={authorData.bio}\n          projectId={sanityClient.projectId}\n          dataset={sanityClient.dataset}\n        />\n      </article>\n    </main>\n  );\n};\n\nexport default About;\n","// Formats ISO date into 'MON YYYY' format\nconst formatDate = date => {\n  if (date === 'PRESENT') {\n    return date;\n  }\n  const preformattedDate = new Date(date);\n  const month = preformattedDate.toLocaleString('default', { month: 'short' }).toUpperCase();\n  const year = preformattedDate.getFullYear();\n  return `${month} ${year}`;\n};\n\nconst stub = () => {\n  return null;\n};\n\nexport { formatDate, stub };\n","// Absolute imports\nimport React from 'react';\nimport BlockContent from '@sanity/block-content-to-react';\n\n// Relative imports\nimport sanityClient from '../../client';\nimport { formatDate } from '../../utils/utils';\n\n// TypeScript props types\n// interface Props {\n//   title: string;\n//   company: string;\n//   companyUrl: string;\n//   startDate: string;\n//   endDate?: string;\n//   location: string;\n//   description?: BlockContent;\n// }\n\nconst Position = props => {\n  const { title, company, companyUrl, startDate, endDate, location, description } = props;\n\n  return (\n    <div className=\"position-block\">\n      <header className=\"position-header\">\n        <h2>{title}</h2>\n        <a href={companyUrl} target=\"_blank\" rel=\"noreferrer\">\n          <h4 className=\"position-company\">{company}</h4>\n        </a>\n        <p>\n          {formatDate(startDate)} - {formatDate(endDate)}\n        </p>\n        <p>{location.toUpperCase()}</p>\n      </header>\n\n      <div className=\"position-description\">\n        <BlockContent\n          blocks={description}\n          projectId={sanityClient.projectId}\n          dataset={sanityClient.dataset}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Position;\n","import React from 'react';\n\nconst SkillCategory = props => {\n  const { category, skillList } = props;\n\n  return (\n    <div className=\"skill-category-block\">\n      <h2 className=\"skill-category\">{category}</h2>\n      <ul className=\"skill-list\">\n        {skillList.map(skill => {\n          return <li key={skill}>{skill}</li>;\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default SkillCategory;\n","// Absolute imports\nimport React from 'react';\n\n// Relative imports\nimport { formatDate } from '../../utils/utils';\n\nconst Education = props => {\n  const { school, major, minor, startDate, endDate, gpa, notes } = props;\n\n  return (\n    <div className=\"education-block\">\n      <h2>{school}</h2>\n      <h4>\n        {major}, {minor}\n      </h4>\n      <p>\n        {formatDate(startDate)} - {formatDate(endDate)}\n      </p>\n      <p>\n        GPA: <strong>{gpa}/4.0</strong>, {notes}\n      </p>\n    </div>\n  );\n};\n\nexport default Education;\n","// Absolute imports\nimport React, { useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\n\n// Relative imports\nimport sanityClient from '../../client';\nimport Header from '../Header';\nimport Position from './Position';\nimport SkillCategory from './SkillCategory';\nimport Education from './Education';\n\ninterface Props {\n  title: string;\n  schema?: string;\n}\n\nconst ResumeSection: React.FC<Props> = props => {\n  // Component properties\n  const { title, schema } = props;\n\n  // Component state\n  const [sectionData, setSectionData] = useState(null);\n\n  useEffect(() => {\n    if (schema) {\n      sanityClient\n        .fetch(`*[_type == $schema] | order(startDate desc)`, { schema })\n        .then(data => {\n          setSectionData(data);\n        })\n        .catch(console.error);\n    }\n  }, []);\n\n  let component = null;\n\n  if (sectionData) {\n    if (schema === 'position') {\n      component = sectionData.map(data => {\n        const {\n          company,\n          companyUrl,\n          startDate,\n          endDate,\n          currentPosition,\n          location,\n          description,\n        } = data;\n\n        return (\n          <Position\n            key={uuid()}\n            title={data.title}\n            company={company}\n            companyUrl={companyUrl}\n            startDate={startDate}\n            endDate={currentPosition ? 'PRESENT' : endDate}\n            location={location}\n            description={description}\n          />\n        );\n      });\n    } else if (schema === 'skills') {\n      component = sectionData.map(data => {\n        const { category, skillList } = data;\n\n        return <SkillCategory key={uuid()} category={category} skillList={skillList} />;\n      });\n    } else if (schema === 'education') {\n      component = sectionData.map(data => {\n        const { school, major, minor, startDate, endDate, gpa, notes } = data;\n\n        return (\n          <Education\n            key={uuid()}\n            school={school}\n            major={major}\n            minor={minor}\n            startDate={startDate}\n            endDate={endDate}\n            gpa={gpa}\n            notes={notes}\n          />\n        );\n      });\n    }\n  } else {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <section className={title.toLowerCase()}>\n      <Header className=\"header\" title={title} />\n      {component}\n    </section>\n  );\n};\n\nexport default ResumeSection;\n","import React from 'react';\n\nimport ResumeSection from './ResumeSection';\n\nconst Resume: React.FC = () => {\n  return (\n    <main className=\"content\">\n      <ResumeSection title=\"Experience\" schema=\"position\" />\n      <ResumeSection title=\"Skills\" schema=\"skills\" />\n      <ResumeSection title=\"Education\" schema=\"education\" />\n    </main>\n  );\n};\n\nexport default Resume;\n","import React from 'react';\n\nconst Footer: React.FC = () => {\n  return (\n    <div className=\"footer-container\">\n      <footer className=\"footer\">\n        <h2>In progress!</h2>\n      </footer>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\n\n// Relative imports\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Projects from './components/Projects';\nimport Project from './components/Project';\nimport About from './components/About';\nimport Resume from './components/Resume/Resume';\nimport Footer from './components/Footer';\nimport './css/App.css';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter basename=\"/\">\n      <div className=\"app\">\n        <Navbar />\n\n        <div className=\"content-container\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/projects\" exact component={Projects} />\n            <Route path=\"/projects/:slug\" component={Project} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/resume\" component={Resume} />\n            <Route path=\"/\" render={() => <div>404</div>} />\n          </Switch>\n        </div>\n\n        <Footer />\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\n// eslint-disable-next-line\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}