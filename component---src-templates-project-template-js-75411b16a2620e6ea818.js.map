{"version":3,"file":"component---src-templates-project-template-js-75411b16a2620e6ea818.js","mappings":"+LAKA,MAAMA,EAAW,CACf,CAAEC,MAAO,WAAYC,GAAI,aACzB,CAAED,MAAO,SAAUC,GAAI,YAyBzB,MAtBA,WAEE,MAAMC,EAAWC,EAAAA,cAAAA,SAAAA,SAEjB,OACEC,EAAAA,cAAA,OAAKC,UAAU,iBACbD,EAAAA,cAAA,UACGL,EAASO,KAAKC,GACbH,EAAAA,cAAA,MACEI,IAAKD,EAAKP,MACVK,UAAS,cACPH,EAASO,SAASF,EAAKN,IAAM,oBAAsB,KAGrDG,EAAAA,cAACM,EAAAA,KAAI,CAACT,GAAIM,EAAKN,IAAKM,EAAKP,WAMrC,ECxBA,MAAMW,EAASC,IAAA,IAAC,UAAEC,GAAWD,EAAA,OAC3BR,EAAAA,cAAA,cACEA,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,MAAIC,UAAU,aAAaS,MAAO,CAAEC,OAAQ,IAC1CX,EAAAA,cAACM,EAAAA,KAAI,CAACT,GAAG,KAAKY,IAEhBT,EAAAA,cAACY,EAAG,OAEC,EAOXL,EAAOM,aAAe,CACpBJ,UAAU,IAGZ,QCmBA,MA9BeD,IAAmB,IAADM,EAAA,IAAjB,SAAEC,GAAUP,EAC1B,MAAMQ,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACEjB,EAAAA,cAAA,OAAKC,UAAU,kBACbD,EAAAA,cAACO,EAAM,CACLE,WAAiC,QAAtBK,EAAAE,EAAKE,KAAKC,oBAAY,IAAAL,OAAA,EAAtBA,EAAwBM,MAAMC,gBAAa,UAGxDrB,EAAAA,cAAA,QAAMC,UAAU,WAAWc,GAE3Bf,EAAAA,cAAA,cACEA,EAAAA,cAAA,SAAG,8DAED,C,sGC/BK,SAASsB,EAAed,GAAY,IAAX,KAAEQ,GAAMR,EAC9C,MAAM,eAAEe,GAAmBP,GACrB,YAAEQ,EAAW,KAAEC,GAASF,EAE9B,OACEvB,EAAAA,cAAC0B,EAAAA,EAAM,KACL1B,EAAAA,cAAA,WAASC,UAAU,qBACjBD,EAAAA,cAAA,UAAKwB,EAAYJ,MAAMC,eAEvBrB,EAAAA,cAACM,EAAAA,KAAI,CAACT,GAAG,aAAY,sBAErBG,EAAAA,cAAA,UAAKwB,EAAYG,SAEjB3B,EAAAA,cAAA,UACEA,EAAAA,cAAA,UAAI,WAASwB,EAAYI,OAG3B5B,EAAAA,cAAA,OACEC,UAAU,kBACV4B,wBAAyB,CAAEC,OAAQL,MAK7C,C","sources":["webpack://personal-portfolio/./src/components/nav.js","webpack://personal-portfolio/./src/components/header.js","webpack://personal-portfolio/./src/components/layout.js","webpack://personal-portfolio/./src/templates/projectTemplate.js"],"sourcesContent":["import React from 'react';\nimport { Link } from 'gatsby';\nimport { globalHistory } from '@reach/router';\n\n// Add object to this array to add more nav sections\nconst navLinks = [\n  { label: 'PROJECTS', to: '/projects' },\n  { label: 'RESUME', to: '/resume' },\n];\n\nfunction Nav() {\n  // Retrieves current path\n  const pathname = globalHistory.location.pathname;\n\n  return (\n    <nav className=\"nav-container\">\n      <ul>\n        {navLinks.map((link) => (\n          <li\n            key={link.label}\n            className={`menu-item ${\n              pathname.includes(link.to) ? 'current-menu-item' : ''\n            }`}\n          >\n            <Link to={link.to}>{link.label}</Link>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\n\nimport Nav from './nav';\n\nconst Header = ({ siteTitle }) => (\n  <header>\n    <div className=\"sticky-container\">\n      <h1 className=\"site-title\" style={{ margin: 0 }}>\n        <Link to=\"/\">{siteTitle}</Link>\n      </h1>\n      <Nav />\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n};\n\nHeader.defaultProps = {\n  siteTitle: ``,\n};\n\nexport default Header;\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport '../stylesheets/scss/layout.scss';\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <div className=\"site-container\">\n      <Header\n        siteTitle={data.site.siteMetadata?.title.toUpperCase() || `Title`}\n      />\n\n      <main className=\"content\">{children}</main>\n\n      <footer>\n        <p>Created using React, Gatsby, GraphQL, Sass, and Markdown.</p>\n      </footer>\n    </div>\n  );\n};\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\n\nexport default function ProjectTemplate({ data }) {\n  const { markdownRemark } = data;\n  const { frontmatter, html } = markdownRemark;\n\n  return (\n    <Layout>\n      <article className=\"project-container\">\n        <h1>{frontmatter.title.toUpperCase()}</h1>\n\n        <Link to=\"/projects\">&larr; Back to Projects</Link>\n\n        <h3>{frontmatter.summary}</h3>\n\n        <h4>\n          <em>Updated {frontmatter.date}</em>\n        </h4>\n\n        <div\n          className=\"project-content\"\n          dangerouslySetInnerHTML={{ __html: html }}\n        />\n      </article>\n    </Layout>\n  );\n}\n\nexport const projectQuery = graphql`\n  query($path: String!) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      html\n      frontmatter {\n        path\n        date\n        title\n        summary\n        author\n      }\n    }\n  }\n`;\n"],"names":["navLinks","label","to","pathname","globalHistory","React","className","map","link","key","includes","Link","Header","_ref","siteTitle","style","margin","Nav","defaultProps","_data$site$siteMetada","children","data","useStaticQuery","site","siteMetadata","title","toUpperCase","ProjectTemplate","markdownRemark","frontmatter","html","Layout","summary","date","dangerouslySetInnerHTML","__html"],"sourceRoot":""}